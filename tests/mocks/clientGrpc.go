// Code generated by MockGen. DO NOT EDIT.
// Source: internal/client/grpc/client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "beliaev-aa/GophKeeper/pkg/models"
	context "context"
	reflect "reflect"

	tea "github.com/charmbracelet/bubbletea"
	gomock "github.com/golang/mock/gomock"
	zap "go.uber.org/zap"
)

// MockClientGRPCInterface is a mock of ClientGRPCInterface interface.
type MockClientGRPCInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientGRPCInterfaceMockRecorder
}

// MockClientGRPCInterfaceMockRecorder is the mock recorder for MockClientGRPCInterface.
type MockClientGRPCInterfaceMockRecorder struct {
	mock *MockClientGRPCInterface
}

// NewMockClientGRPCInterface creates a new mock instance.
func NewMockClientGRPCInterface(ctrl *gomock.Controller) *MockClientGRPCInterface {
	mock := &MockClientGRPCInterface{ctrl: ctrl}
	mock.recorder = &MockClientGRPCInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientGRPCInterface) EXPECT() *MockClientGRPCInterfaceMockRecorder {
	return m.recorder
}

// DeleteSecret mocks base method.
func (m *MockClientGRPCInterface) DeleteSecret(ctx context.Context, id uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecret", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSecret indicates an expected call of DeleteSecret.
func (mr *MockClientGRPCInterfaceMockRecorder) DeleteSecret(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecret", reflect.TypeOf((*MockClientGRPCInterface)(nil).DeleteSecret), ctx, id)
}

// GetPassword mocks base method.
func (m *MockClientGRPCInterface) GetPassword() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPassword")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPassword indicates an expected call of GetPassword.
func (mr *MockClientGRPCInterfaceMockRecorder) GetPassword() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPassword", reflect.TypeOf((*MockClientGRPCInterface)(nil).GetPassword))
}

// GetToken mocks base method.
func (m *MockClientGRPCInterface) GetToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetToken indicates an expected call of GetToken.
func (mr *MockClientGRPCInterfaceMockRecorder) GetToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockClientGRPCInterface)(nil).GetToken))
}

// LoadSecret mocks base method.
func (m *MockClientGRPCInterface) LoadSecret(ctx context.Context, ID uint64) (*models.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadSecret", ctx, ID)
	ret0, _ := ret[0].(*models.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadSecret indicates an expected call of LoadSecret.
func (mr *MockClientGRPCInterfaceMockRecorder) LoadSecret(ctx, ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadSecret", reflect.TypeOf((*MockClientGRPCInterface)(nil).LoadSecret), ctx, ID)
}

// LoadSecrets mocks base method.
func (m *MockClientGRPCInterface) LoadSecrets(ctx context.Context) ([]*models.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadSecrets", ctx)
	ret0, _ := ret[0].([]*models.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadSecrets indicates an expected call of LoadSecrets.
func (mr *MockClientGRPCInterfaceMockRecorder) LoadSecrets(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadSecrets", reflect.TypeOf((*MockClientGRPCInterface)(nil).LoadSecrets), ctx)
}

// Login mocks base method.
func (m *MockClientGRPCInterface) Login(ctx context.Context, login, password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", ctx, login, password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockClientGRPCInterfaceMockRecorder) Login(ctx, login, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockClientGRPCInterface)(nil).Login), ctx, login, password)
}

// Notifications mocks base method.
func (m *MockClientGRPCInterface) Notifications(p *tea.Program, logger *zap.Logger) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Notifications", p, logger)
}

// Notifications indicates an expected call of Notifications.
func (mr *MockClientGRPCInterfaceMockRecorder) Notifications(p, logger interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Notifications", reflect.TypeOf((*MockClientGRPCInterface)(nil).Notifications), p, logger)
}

// Register mocks base method.
func (m *MockClientGRPCInterface) Register(ctx context.Context, login, password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", ctx, login, password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockClientGRPCInterfaceMockRecorder) Register(ctx, login, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockClientGRPCInterface)(nil).Register), ctx, login, password)
}

// SaveSecret mocks base method.
func (m *MockClientGRPCInterface) SaveSecret(ctx context.Context, secret *models.Secret) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveSecret", ctx, secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveSecret indicates an expected call of SaveSecret.
func (mr *MockClientGRPCInterfaceMockRecorder) SaveSecret(ctx, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveSecret", reflect.TypeOf((*MockClientGRPCInterface)(nil).SaveSecret), ctx, secret)
}

// SetPassword mocks base method.
func (m *MockClientGRPCInterface) SetPassword(password string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetPassword", password)
}

// SetPassword indicates an expected call of SetPassword.
func (mr *MockClientGRPCInterfaceMockRecorder) SetPassword(password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPassword", reflect.TypeOf((*MockClientGRPCInterface)(nil).SetPassword), password)
}

// SetToken mocks base method.
func (m *MockClientGRPCInterface) SetToken(token string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetToken", token)
}

// SetToken indicates an expected call of SetToken.
func (mr *MockClientGRPCInterfaceMockRecorder) SetToken(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetToken", reflect.TypeOf((*MockClientGRPCInterface)(nil).SetToken), token)
}
